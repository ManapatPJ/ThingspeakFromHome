Imports System.Net
Imports System.IO
Imports Newtonsoft.Json.Linq

Public Class AppInterface

    Dim rec_table As New DataTable


    Sub initialize()
        rec_table.Columns.Add("Date")
        rec_table.Columns.Add("First Name")
        rec_table.Columns.Add("Last Name")
        rec_table.Columns.Add("Temperature")
        rec_table.Columns.Add("Pulse")
        rec_table.Columns.Add("Blood Pressure")
        rec_table.Columns.Add("Respiration")
        rec_table.Columns.Add("Latitude")
        rec_table.Columns.Add("Longitude")
        rec_table.Columns.Add("Distance", GetType(Double))
    End Sub
    Private Sub AppInterface_Load(sender As Object, e As EventArgs) Handles MyBase.Load
        initialize()

        Try
            Dim request As HttpWebRequest
            Dim response As HttpWebResponse = Nothing
            Dim reader As StreamReader

            request = DirectCast(WebRequest.Create("https://api.thingspeak.com/channels/733323/feeds.json?api_key=A7U345D8V1DG1MAM&results=100"), HttpWebRequest)

            response = DirectCast(request.GetResponse(), HttpWebResponse)
            reader = New StreamReader(response.GetResponseStream())

            Dim rawresp As String
            rawresp = reader.ReadToEnd()

            Dim json As JObject
            json = JObject.Parse(rawresp)

            Dim txt As String()
            txt = Split(json("feeds").ToString, "{")

            Dim txt2 As String()
            For i As Integer = 1 To UBound(txt)
                txt2 = Split(txt(i), "}")




                Dim data As String
                data = txt2(0)

                Dim dateArray As String()

                Dim dateTime As String = ""
                dateArray = Split(data, "created_at")
                dateTime = dateArray(1).Substring(4, 20).Replace("T", " ").Replace("Z", " ")

                Dim final As String()
                'MsgBox(txt2(0).Replace("field", "").Replace("" & ControlChars.Quote & "", "").Replace(" ", ""))
                final = Split(txt2(0).Replace("field", "").Replace("" & ControlChars.Quote & "", "").Replace(" ", ""), vbNewLine)

                rec_table.Rows.Add(dateTime,
                                   final(3).Replace(",", "").Remove(0, 2),
                                   final(4).Replace(",", "").Remove(0, 2),
                                   final(5).Replace(",", "").Remove(0, 2),
                                   final(6).Replace(",", "").Remove(0, 2),
                                   final(7).Replace(",", "").Remove(0, 2),
                                   final(8).Replace(",", "").Remove(0, 2),
                                   final(9).Replace(",", "").Remove(0, 2),
                                   final(10).Replace(",", "").Remove(0, 2),
                                   Math.Round(distance(14.187671, 121.125084, final(9).Replace(",", "").Remove(0, 2), final(10).Replace(",", "").Remove(0, 2), "K"), 2))

                'TextBox1.Text += "Entry No.:" & i & " " & final(3).Remove(0, 3) + final(4).Remove(0, 3) + final(5).Remove(0, 3) + final(6).Remove(0, 3) + final(7).Remove(0, 3) + final(8).Remove(0, 3) + vbNewLine
                'TextBox1.Text = TextBox1.Text.Replace("" & ControlChars.Quote & "", "")
            Next


            DataGridView1.DataSource = rec_table
            DataGridView1.Update()
            DataGridView1.Sort(DataGridView1.Columns(0), System.ComponentModel.ListSortDirection.Descending)
        Catch ex As Exception
            MsgBox(ex.ToString)
        End Try



    End Sub

    Private Sub bgw_checker_DoWork(sender As Object, e As System.ComponentModel.DoWorkEventArgs) Handles bgw_checker.DoWork
        Try
            Dim request As HttpWebRequest
            Dim response As HttpWebResponse = Nothing
            Dim reader As StreamReader

            request = DirectCast(WebRequest.Create("https://api.thingspeak.com/channels/733323/feeds.json?api_key=A7U345D8V1DG1MAM&results=100"), HttpWebRequest)

            response = DirectCast(request.GetResponse(), HttpWebResponse)
            reader = New StreamReader(response.GetResponseStream())

            Dim rawresp As String
            rawresp = reader.ReadToEnd()

            Dim json As JObject
            json = JObject.Parse(rawresp)

            Dim txt As String()
            txt = Split(json("feeds").ToString, "{")

            Dim txt2 As String()
            For i As Integer = 1 To UBound(txt)
                txt2 = Split(txt(i), "}")




                Dim data As String
                data = txt2(0)

                Dim dateArray As String()

                Dim dateTime As String = ""
                dateArray = Split(data, "created_at")
                dateTime = dateArray(1).Substring(4, 20).Replace("T", " ").Replace("Z", " ")


                Dim foundDate As DataRow() = rec_table.[Select]("Date = '" & dateTime & "'")

                If foundDate.Length <> 0 Then
                    GoTo nextt
                End If

                bgw_checker.ReportProgress(10)

                Dim final As String()
                'MsgBox(txt2(0).Replace("field", "").Replace("" & ControlChars.Quote & "", "").Replace(" ", ""))
                final = Split(txt2(0).Replace("field", "").Replace("" & ControlChars.Quote & "", "").Replace(" ", ""), vbNewLine)

                
                rec_table.Rows.Add(dateTime,
                                   final(3).Replace(",", "").Remove(0, 2),
                                   final(4).Replace(",", "").Remove(0, 2),
                                   final(5).Replace(",", "").Remove(0, 2),
                                   final(6).Replace(",", "").Remove(0, 2),
                                   final(7).Replace(",", "").Remove(0, 2),
                                   final(8).Replace(",", "").Remove(0, 2),
                                   final(9).Replace(",", "").Remove(0, 2),
                                   final(10).Replace(",", "").Remove(0, 2),
                                   Math.Round(distance(14.187671, 121.125084, final(9).Replace(",", "").Remove(0, 2), final(10).Replace(",", "").Remove(0, 2), "K"), 2))

                'TextBox1.Text += "Entry No.:" & i & " " & final(3).Remove(0, 3) + final(4).Remove(0, 3) + final(5).Remove(0, 3) + final(6).Remove(0, 3) + final(7).Remove(0, 3) + final(8).Remove(0, 3) + vbNewLine
                'TextBox1.Text = TextBox1.Text.Replace("" & ControlChars.Quote & "", "")
nextt:

            Next


        Catch ex As Exception
            'MsgBox(ex.ToString)
        End Try

    End Sub

    Private Sub Button1_Click(sender As Object, e As EventArgs) Handles Button1.Click

        bgw_checker.RunWorkerAsync()
    End Sub

    Private Sub bgw_checker_RunWorkerCompleted(sender As Object, e As System.ComponentModel.RunWorkerCompletedEventArgs) Handles bgw_checker.RunWorkerCompleted

        Label1.Text = Label1.Text + 1
        bgw_checker.RunWorkerAsync()
    End Sub

    Private Sub bgw_checker_ProgressChanged(sender As Object, e As System.ComponentModel.ProgressChangedEventArgs) Handles bgw_checker.ProgressChanged
        'dg_records.DataSource = Nothing
        'dg_records.DataSource = rec_table
        'dg_records.Update()

        'DataGridView1.DataSource = Nothing
        DataGridView1.DataSource = rec_table

        DataGridView1.Update()
        DataGridView1.Refresh()
        Label2.Text = Label2.Text + 1
        DataGridView1.Sort(DataGridView1.Columns(0), System.ComponentModel.ListSortDirection.Descending)
    End Sub




    Public Function distance(ByVal lat1 As Double, ByVal lon1 As Double, ByVal lat2 As Double, ByVal lon2 As Double, ByVal unit As Char) As Double
        If lat1 = lat2 And lon1 = lon2 Then
            Return 0
        Else
            Dim theta As Double = lon1 - lon2
            Dim dist As Double = Math.Sin(deg2rad(lat1)) * Math.Sin(deg2rad(lat2)) + Math.Cos(deg2rad(lat1)) * Math.Cos(deg2rad(lat2)) * Math.Cos(deg2rad(theta))
            dist = Math.Acos(dist)
            dist = rad2deg(dist)
            dist = dist * 60 * 1.1515
            If unit = "K" Then
                dist = dist * 1.609344
            ElseIf unit = "N" Then
                dist = dist * 0.8684
            End If
            Return dist
        End If
    End Function

    Private Function deg2rad(ByVal deg As Double) As Double
        Return (deg * Math.PI / 180.0)
    End Function

    Private Function rad2deg(ByVal rad As Double) As Double
        Return rad / Math.PI * 180.0
    End Function


End Class